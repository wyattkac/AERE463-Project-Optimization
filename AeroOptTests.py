"""
@author: wtk
"""
# Import Stuff
import openvsp as vsp

# Setup Vehicle ------------------------------------------------------------------------------------
print("\tSetting vehicle parameters.")
pod_id = vsp.AddGeom("POD", "")
wing_id = vsp.AddGeom("WING", pod_id)

vsp.SetParmVal(wing_id, "X_Rel_Location", "XForm", 2.5)
vsp.SetParmVal(wing_id, "TotalArea", "WingGeom", 25)
vsp.SetParmVal(wing_id, "SectTess_U", "XSec_1", 12)
"""
pod_id = vsp.AddGeom("POD", "")
wing_id = vsp.AddGeom("WING", pod_id)
vsp.SetParmVal(wing_id, "X_Rel_Location", "XForm", 2.5)
vsp.SetParmVal( wing_id, "TotalArea", "WingGeom", 25 )
vsp.SetParmVal(wing_id, "SectTess_U", "XSec_1", 12)
elev_id = vsp.AddGeom("WING", pod_id)
vsp.SetParmVal(elev_id, "X_Rel_Location", "XForm", 8)
vsp.SetParmVal(elev_id, "TotalArea", "WingGeom", 5)
rudd_id = vsp.AddGeom("WING", pod_id)
vsp.SetSetFlag(rudd_id, 3, True)
vsp.RotateSet(3, 90, 0, 0)
vsp.SetParmVal(rudd_id, "X_Rel_Location", "XForm", 8.2)
vsp.SetParmVal(rudd_id, "TotalArea", "WingGeom", 3)
"""

# Save and Export Vehicle --------------------------------------------------------------------------
# Update the vehicle before saving/exporting
vsp.Update()
# Save to a file
fname = "test_vehicle.vsp3"
vsp.SetVSP3FileName(fname)
print("\tSaving vehicle file to: ", fname)
vsp.WriteVSPFile(vsp.GetVSPFileName(), vsp.SET_ALL)
# Export STL
fname = "test_vehicle_mesh.stl"
print("\tExporting mesh (STL) as:", fname)
mesh_id = vsp.ExportFile(fname, vsp.SET_ALL, vsp.EXPORT_STL)
vsp.DeleteGeom(mesh_id) # Delete the mesh generated by the STL export

# Setup and Run Aerodynamic Analysis ---------------------------------------------------------------
# Setup an Aero Analysis (Compute Geometry)
compgeom_name = "VSPAEROComputeGeometry"
print("\tStarting:", compgeom_name)
# Set defaults
vsp.SetAnalysisInputDefaults(compgeom_name)
# Analysis method
analysis_method = list(vsp.GetIntAnalysisInput(compgeom_name, "AnalysisMethod"))
analysis_method[0] = vsp.VORTEX_LATTICE
vsp.SetIntAnalysisInput(compgeom_name, "AnalysisMethod", analysis_method)
# list inputs, type, and current values
#vsp.PrintAnalysisInputs(compgeom_name)
# Execute
print("\t\tExecuting...", end="")
compgeom_resid = vsp.ExecAnalysis(compgeom_name)
print("COMPLETE")
# Get & Display Results
#vsp.PrintResults(compgeom_resid)

# Run the Aerodynamic Analysis (VSPAero Sweep)
analysis_name = "VSPAEROSweep"
vsp.SetAnalysisInputDefaults(analysis_name)
#// Reference geometry set
geom_set = []
geom_set.append(0)
vsp.SetIntAnalysisInput( analysis_name, "GeomSet", geom_set, 0 )
ref_flag = []
ref_flag.append(1)
vsp.SetIntAnalysisInput(analysis_name, "RefFlag", ref_flag, 0)
wid = vsp.FindGeomsWithName("WingGeom")
vsp.SetStringAnalysisInput(analysis_name, "WingID", wid, 0)

#// Freestream Parameters
alpha = []
alpha.append( 0.0 )
vsp.SetDoubleAnalysisInput( analysis_name, "AlphaStart", alpha, 0 )
AlphaNpts = []
vsp.SetIntAnalysisInput( analysis_name, "AlphaNpts", AlphaNpts, 0)
mach = []
mach.append( 0.1 )
vsp.SetDoubleAnalysisInput( analysis_name, "MachStart", mach, 0 )

vsp.Update()

#// list inputs, type, and current values
vsp.PrintAnalysisInputs( analysis_name )
print( "" )

#// Execute
print( "\tExecuting..." )
rid = vsp.ExecAnalysis( analysis_name )
print( "COMPLETE" )

#// Get & Display Results
vsp.PrintResults( rid )

history_res = vsp.FindLatestResultsID( "VSPAERO_History" )
load_res = vsp.FindLatestResultsID( "VSPAERO_Load" )

CL = vsp.GetDoubleResults( history_res, "CL", 0 )
cl = vsp.GetDoubleResults( load_res, "cl", 0 )

# ADDED TO CREATE A CSV FILE WITH NEEDED INFO
vsp.WriteResultsCSVFile( rid, "z.csv" )